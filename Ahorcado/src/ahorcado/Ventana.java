package ahorcado;

import java.awt.Color;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author Diego
 */
public class Ventana extends javax.swing.JFrame {
    int nVidas = 0;
    int nNivel = 1;
    int errores = 0;
    String palabra;
    int palabrasId;
    String jugador;
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Nuevo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nivel = new javax.swing.JTextField();
        Comprobar = new javax.swing.JButton();
        pista = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        letra1 = new javax.swing.JTextField();
        letra2 = new javax.swing.JTextField();
        letra3 = new javax.swing.JTextField();
        letra4 = new javax.swing.JTextField();
        letra5 = new javax.swing.JTextField();
        letra6 = new javax.swing.JTextField();
        letra7 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        vidas = new javax.swing.JTextField();
        Continuar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        errores2 = new javax.swing.JTextField();

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ahorcado");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
        );

        jLabel1.setText("Progreso del juego");

        Nuevo.setText("Juego nuevo");
        Nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NuevoMouseClicked(evt);
            }
        });
        Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoActionPerformed(evt);
            }
        });

        jLabel2.setText("Nivel:");

        nivel.setEditable(false);
        nivel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nivel.setText("1");
        nivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nivelActionPerformed(evt);
            }
        });

        Comprobar.setText("Comprobar palabra");
        Comprobar.setEnabled(false);
        Comprobar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComprobarMouseClicked(evt);
            }
        });
        Comprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprobarActionPerformed(evt);
            }
        });

        pista.setEditable(false);
        pista.setBackground(new java.awt.Color(255, 255, 255));
        pista.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pista.setText("_ _ _ _ _ _ _ _");
        pista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pistaActionPerformed(evt);
            }
        });

        jLabel5.setText("Pista:");

        letra1.setEditable(false);
        letra1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        letra1.setToolTipText("");
        letra1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                letra1ActionPerformed(evt);
            }
        });

        letra2.setEditable(false);
        letra2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        letra3.setEditable(false);
        letra3.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        letra4.setEditable(false);
        letra4.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        letra5.setEditable(false);
        letra5.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        letra6.setEditable(false);
        letra6.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        letra7.setEditable(false);
        letra7.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setText("Vidas:");

        vidas.setEditable(false);
        vidas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vidas.setText("2");
        vidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vidasActionPerformed(evt);
            }
        });

        Continuar.setText("Continuar");
        Continuar.setEnabled(false);
        Continuar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ContinuarMouseClicked(evt);
            }
        });

        jLabel7.setText("Errores:");

        errores2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        errores2.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Nuevo))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Comprobar)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(letra1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(letra2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(letra3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(letra4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(letra5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(letra6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(letra7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(vidas, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(nivel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(errores2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Continuar))))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Nuevo)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(vidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(errores2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(letra1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(letra2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(letra3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(letra4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(letra5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(letra6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(letra7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Continuar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Comprobar)
                        .addGap(0, 119, Short.MAX_VALUE)))
                .addContainerGap())
        );

        letra6.getAccessibleContext().setAccessibleName("");
        vidas.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NuevoActionPerformed

    private void pistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pistaActionPerformed

    private void letra1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_letra1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_letra1ActionPerformed

    private void vidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vidasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vidasActionPerformed

    private void NuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NuevoMouseClicked
        jugador = JOptionPane.showInputDialog("Ingresa tu nombre de jugador");
        try {
            Palabras.crearRegistro(jugador);
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.repaint();
        nNivel = 1;
        nVidas = 2;
        errores = 0;
        Comprobar.setEnabled(true);
        nivel.setText(String.valueOf(nNivel));
        vidas.setText(String.valueOf(nVidas));
        errores2.setText(String.valueOf(errores));
        letra1.setText("");
        letra1.setBackground(Color.white);
        letra3.setText("");
        letra3.setBackground(Color.white);
        letra2.setText("");
        letra2.setBackground(Color.white);
        letra4.setText("");
        letra4.setBackground(Color.white);
        letra5.setText("");
        letra5.setBackground(Color.white);
        letra6.setText("");
        letra6.setBackground(Color.white);
        letra7.setText("");
        letra7.setBackground(Color.white);
        switch(JOptionPane.showOptionDialog(this, "Selecciona el tipo de palabras a buscar", "Ahorcado", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[] {"Frutas", "Animales", "Personas"}, "0")){
            case 0:
                palabra = Palabras.frutas[0];
                palabrasId = 0;
                pista.setText("_ v _");
                letra1.setEditable(true);
                letra3.setEditable(true);
                letra4.setVisible(false);
                letra5.setVisible(false);
                letra6.setVisible(false);
                letra7.setVisible(false);
                letra2.setText("v");
                letra2.setEditable(false);
                break;
            case 1:
                palabra = Palabras.animales[0];
                palabrasId = 1;
                pista.setText("_ s _");
                letra1.setEditable(true);
                letra3.setEditable(true);
                letra4.setVisible(false);
                letra5.setVisible(false);
                letra6.setVisible(false);
                letra7.setVisible(false);
                letra2.setText("s");
                letra2.setEditable(false);
                break;
            case 2:
                palabra = Palabras.personas[0];
                palabrasId = 2;
                pista.setText("_ u _");
                letra1.setEditable(true);
                letra3.setEditable(true);
                letra4.setVisible(false);
                letra5.setVisible(false);
                letra6.setVisible(false);
                letra7.setVisible(false);
                letra2.setText("u");
                letra2.setEditable(false);
                break;
        }
    }//GEN-LAST:event_NuevoMouseClicked

    private void nivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nivelActionPerformed
        
    }//GEN-LAST:event_nivelActionPerformed

    private void ComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprobarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComprobarActionPerformed

    private void ComprobarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComprobarMouseClicked
        char l1, l2, l3, l4;
        if(errores == 0){
            Palabras.dibujarAhorcado(this.getGraphics(), 0);
        }
        switch(palabrasId){
            case 0:
            switch(palabra){
            case "uva":
                l1 = Palabras.separarPalabra(palabra, 0);
                l2 = Palabras.separarPalabra(palabra, 2);
                if(!String.valueOf(letra1.getText()).equals("")){
                if(String.valueOf(l1).equals(letra1.getText())){
                letra1.setBackground(Color.green);
                }else{
                letra1.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                }
                if(String.valueOf(l2).equals(letra3.getText())){
                letra3.setBackground(Color.green);
                }else{
                letra3.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra1.getText()) && String.valueOf(l2).equals(letra3.getText())){
                nNivel += 1;
                Continuar.setEnabled(true);
                }
                break;
            case "kiwi":
                l1 = Palabras.separarPalabra(palabra, 0);
                l2 = Palabras.separarPalabra(palabra, 2);
                if(String.valueOf(l1).equals(letra1.getText())){
                letra1.setBackground(Color.green);
                }else{
                letra1.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l2).equals(letra3.getText())){
                letra3.setBackground(Color.green);
                }else{
                letra3.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra1.getText()) && String.valueOf(l2).equals(letra3.getText())){
                nNivel += 1;
                Continuar.setEnabled(true);
                }
                break;
            case "fresa":
                l1 = Palabras.separarPalabra(palabra, 1);
                l2 = Palabras.separarPalabra(palabra, 3);
                if(String.valueOf(l1).equals(letra2.getText())){
                letra2.setBackground(Color.green);
                }else{
                letra2.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l2).equals(letra4.getText())){
                letra4.setBackground(Color.green);
                }else{
                letra4.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra2.getText()) && String.valueOf(l2).equals(letra4.getText())){
                nNivel += 1;
                Continuar.setEnabled(true);
                }
                break;
            case "sandia":
                l1 = Palabras.separarPalabra(palabra, 0);
                l2 = Palabras.separarPalabra(palabra, 2);
                l3 = Palabras.separarPalabra(palabra, 4);
                if(String.valueOf(l1).equals(letra1.getText())){
                letra1.setBackground(Color.green);
                }else{
                letra1.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l2).equals(letra3.getText())){
                letra3.setBackground(Color.green);
                }else{
                letra3.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l3).equals(letra5.getText())){
                letra5.setBackground(Color.green);
                }else{
                letra5.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra1.getText()) && String.valueOf(l2).equals(letra3.getText()) && String.valueOf(l3).equals(letra5.getText())){
                nNivel += 1;
                Continuar.setEnabled(true);
                }
                break;
            case "naranja":
                l1 = Palabras.separarPalabra(palabra, 0);
                l2 = Palabras.separarPalabra(palabra, 2);
                l3 = Palabras.separarPalabra(palabra, 4);
                l4 = Palabras.separarPalabra(palabra, 6);
                if(String.valueOf(l1).equals(letra1.getText())){
                letra1.setBackground(Color.green);
                }else{
                letra1.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l2).equals(letra3.getText())){
                letra3.setBackground(Color.green);
                }else{
                letra3.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l3).equals(letra5.getText())){
                letra5.setBackground(Color.green);
                }else{
                letra5.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l4).equals(letra7.getText())){
                letra7.setBackground(Color.green);
                }else{
                letra7.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra1.getText()) && String.valueOf(l2).equals(letra3.getText()) && String.valueOf(l3).equals(letra5.getText()) && String.valueOf(l4).equals(letra7.getText())){
                switch(JOptionPane.showOptionDialog(this, "Felicitaciones has ganado", "Ahorcado", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[] {"Juego nuevo", "Salir del juego"}, "0")){
                case 0:
                    this.repaint();
                    nNivel = 1;
                    nVidas = 2;
                    errores = 0;
                    Comprobar.setEnabled(true);
                    nivel.setText(String.valueOf(nNivel));
                    vidas.setText(String.valueOf(nVidas));
                    errores2.setText(String.valueOf(errores));
                    letra1.setText("");
                    letra1.setBackground(Color.white);
                    letra3.setText("");
                    letra3.setBackground(Color.white);
                    letra2.setText("");
                    letra2.setBackground(Color.white);
                    letra4.setText("");
                    letra4.setBackground(Color.white);
                    letra5.setText("");
                    letra5.setBackground(Color.white);
                    letra6.setText("");
                    letra6.setBackground(Color.white);
                    letra7.setText("");
                    letra7.setBackground(Color.white);
                    switch(JOptionPane.showOptionDialog(this, "Selecciona el tipo de palabras a buscar", "Ahorcado", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[] {"Frutas", "Animales", "Personas"}, "0")){
                    case 0:
                        palabra = Palabras.frutas[0];
                        palabrasId = 0;
                        pista.setText("_ v _");
                        letra1.setEditable(true);
                        letra3.setEditable(true);
                        letra4.setVisible(false);
                        letra5.setVisible(false);
                        letra6.setVisible(false);
                        letra7.setVisible(false);
                        letra2.setText("v");
                        letra2.setEditable(false);
                        break;
                    case 1:
                        palabra = Palabras.animales[0];
                        palabrasId = 1;
                        pista.setText("_ s _");
                        letra1.setEditable(true);
                        letra3.setEditable(true);
                        letra4.setVisible(false);
                        letra5.setVisible(false);
                        letra6.setVisible(false);
                        letra7.setVisible(false);
                        letra2.setText("s");
                        letra2.setEditable(false);
                        break;
                    case 2:
                        palabra = Palabras.personas[0];
                        palabrasId = 2;
                        pista.setText("_ u _");
                        letra1.setEditable(true);
                        letra3.setEditable(true);
                        letra4.setVisible(false);
                        letra5.setVisible(false);
                        letra6.setVisible(false);
                        letra7.setVisible(false);
                        letra2.setText("u");
                        letra2.setEditable(false);
                        break;
                    }
                    break;
                case 1:
                    System.exit(0);
                    break;
                }
                }
                break;
        }
                break;
            case 1:
                switch(palabra){
                case "oso":
                    l1 = Palabras.separarPalabra(palabra, 0);
                    l2 = Palabras.separarPalabra(palabra, 2);
                    if(!String.valueOf(letra1.getText()).equals("")){
                    if(String.valueOf(l1).equals(letra1.getText())){
                    letra1.setBackground(Color.green);
                    }else{
                    letra1.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    }
                    if(String.valueOf(l2).equals(letra3.getText())){
                    letra3.setBackground(Color.green);
                    }else{
                    letra3.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l1).equals(letra1.getText()) && String.valueOf(l2).equals(letra3.getText())){
                    nNivel += 1;
                    Continuar.setEnabled(true);
                    }
                    break;
                case "leon":
                    l1 = Palabras.separarPalabra(palabra, 0);
                    l2 = Palabras.separarPalabra(palabra, 2);
                    if(String.valueOf(l1).equals(letra1.getText())){
                    letra1.setBackground(Color.green);
                    }else{
                    letra1.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l2).equals(letra3.getText())){
                    letra3.setBackground(Color.green);
                    }else{
                    letra3.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l1).equals(letra1.getText()) && String.valueOf(l2).equals(letra3.getText())){
                    nNivel += 1;
                    Continuar.setEnabled(true);
                    }
                    break;
                case "tigre":
                    l1 = Palabras.separarPalabra(palabra, 1);
                    l2 = Palabras.separarPalabra(palabra, 3);
                    if(String.valueOf(l1).equals(letra2.getText())){
                    letra2.setBackground(Color.green);
                    }else{
                    letra2.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l2).equals(letra4.getText())){
                    letra4.setBackground(Color.green);
                    }else{
                    letra4.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l1).equals(letra2.getText()) && String.valueOf(l2).equals(letra4.getText())){
                    nNivel += 1;
                    Continuar.setEnabled(true);
                    }
                    break;
                case "gorila":
                    l1 = Palabras.separarPalabra(palabra, 0);
                    l2 = Palabras.separarPalabra(palabra, 2);
                    l3 = Palabras.separarPalabra(palabra, 4);
                    if(String.valueOf(l1).equals(letra1.getText())){
                    letra1.setBackground(Color.green);
                    }else{
                    letra1.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l2).equals(letra3.getText())){
                    letra3.setBackground(Color.green);
                    }else{
                    letra3.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l3).equals(letra5.getText())){
                    letra5.setBackground(Color.green);
                    }else{
                    letra5.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l1).equals(letra1.getText()) && String.valueOf(l2).equals(letra3.getText()) && String.valueOf(l3).equals(letra5.getText())){
                    nNivel += 1;
                    Continuar.setEnabled(true);
                    }
                    break;
                case "tiburon":
                    l1 = Palabras.separarPalabra(palabra, 0);
                    l2 = Palabras.separarPalabra(palabra, 2);
                    l3 = Palabras.separarPalabra(palabra, 4);
                    l4 = Palabras.separarPalabra(palabra, 6);
                    if(String.valueOf(l1).equals(letra1.getText())){
                    letra1.setBackground(Color.green);
                    }else{
                    letra1.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l2).equals(letra3.getText())){
                    letra3.setBackground(Color.green);
                    }else{
                    letra3.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l3).equals(letra5.getText())){
                    letra5.setBackground(Color.green);
                    }else{
                    letra5.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l4).equals(letra7.getText())){
                    letra7.setBackground(Color.green);
                    }else{
                    letra7.setBackground(Color.red);
                    errores += 1;
                    Palabras.dibujarAhorcado(this.getGraphics(), errores);
                    }
                    if(String.valueOf(l1).equals(letra1.getText()) && String.valueOf(l2).equals(letra3.getText()) && String.valueOf(l3).equals(letra5.getText()) && String.valueOf(l4).equals(letra7.getText())){
                    switch(JOptionPane.showOptionDialog(this, "Felicitaciones has ganado", "Ahorcado", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[] {"Juego nuevo", "Salir del juego"}, "0")){
                    case 0:
                        this.repaint();
                        nNivel = 1;
                        nVidas = 2;
                        errores = 0;
                        Comprobar.setEnabled(true);
                        nivel.setText(String.valueOf(nNivel));
                        vidas.setText(String.valueOf(nVidas));
                        errores2.setText(String.valueOf(errores));
                        letra1.setText("");
                        letra1.setBackground(Color.white);
                        letra3.setText("");
                        letra3.setBackground(Color.white);
                        letra2.setText("");
                        letra2.setBackground(Color.white);
                        letra4.setText("");
                        letra4.setBackground(Color.white);
                        letra5.setText("");
                        letra5.setBackground(Color.white);
                        letra6.setText("");
                        letra6.setBackground(Color.white);
                        letra7.setText("");
                        letra7.setBackground(Color.white);
                        switch(JOptionPane.showOptionDialog(this, "Selecciona el tipo de palabras a buscar", "Ahorcado", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[] {"Frutas", "Animales", "Personas"}, "0")){
                        case 0:
                            palabra = Palabras.frutas[0];
                            palabrasId = 0;
                            pista.setText("_ v _");
                            letra1.setEditable(true);
                            letra3.setEditable(true);
                            letra4.setVisible(false);
                            letra5.setVisible(false);
                            letra6.setVisible(false);
                            letra7.setVisible(false);
                            letra2.setText("v");
                            letra2.setEditable(false);
                            break;
                        case 1:
                            palabra = Palabras.animales[0];
                            palabrasId = 1;
                            pista.setText("_ s _");
                            letra1.setEditable(true);
                            letra3.setEditable(true);
                            letra4.setVisible(false);
                            letra5.setVisible(false);
                            letra6.setVisible(false);
                            letra7.setVisible(false);
                            letra2.setText("s");
                            letra2.setEditable(false);
                            break;
                        case 2:
                            palabra = Palabras.personas[0];
                            palabrasId = 2;
                            pista.setText("_ u _");
                            letra1.setEditable(true);
                            letra3.setEditable(true);
                            letra4.setVisible(false);
                            letra5.setVisible(false);
                            letra6.setVisible(false);
                            letra7.setVisible(false);
                            letra2.setText("u");
                            letra2.setEditable(false);
                            break;
                        }
                        break;
                    case 1:
                        System.exit(0);
                        break;
                    }
                    }
                    break;
            }
                    break;
            case 2:
                switch(palabra){
            case "Jun":
                l1 = Palabras.separarPalabra(palabra, 0);
                l2 = Palabras.separarPalabra(palabra, 2);
                if(String.valueOf(l1).equals(letra1.getText().toUpperCase())){
                letra1.setBackground(Color.green);
                }else{
                letra1.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l2).equals(letra3.getText())){
                letra3.setBackground(Color.green);
                }else{
                letra3.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra1.getText().toUpperCase()) && String.valueOf(l2).equals(letra3.getText())){
                nNivel += 1;
                Continuar.setEnabled(true);
                }
                break;
            case "John":
                l1 = Palabras.separarPalabra(palabra, 0);
                l2 = Palabras.separarPalabra(palabra, 2);
                if(String.valueOf(l1).equals(letra1.getText().toUpperCase())){
                letra1.setBackground(Color.green);
                }else{
                letra1.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l2).equals(letra3.getText())){
                letra3.setBackground(Color.green);
                }else{
                letra3.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra1.getText().toUpperCase()) && String.valueOf(l2).equals(letra3.getText())){
                nNivel += 1;
                Continuar.setEnabled(true);
                }
                break;
            case "Emile":
                l1 = Palabras.separarPalabra(palabra, 1);
                l2 = Palabras.separarPalabra(palabra, 3);
                if(String.valueOf(l1).equals(letra2.getText())){
                letra2.setBackground(Color.green);
                }else{
                letra2.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l2).equals(letra4.getText())){
                letra4.setBackground(Color.green);
                }else{
                letra4.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra2.getText()) && String.valueOf(l2).equals(letra4.getText())){
                nNivel += 1;
                Continuar.setEnabled(true);
                }
                break;
            case "Carter":
                l1 = Palabras.separarPalabra(palabra, 0);
                l2 = Palabras.separarPalabra(palabra, 2);
                l3 = Palabras.separarPalabra(palabra, 4);
                if(String.valueOf(l1).equals(letra1.getText().toUpperCase())){
                letra1.setBackground(Color.green);
                }else{
                letra1.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l2).equals(letra3.getText())){
                letra3.setBackground(Color.green);
                }else{
                letra3.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l3).equals(letra5.getText())){
                letra5.setBackground(Color.green);
                }else{
                letra5.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra1.getText().toUpperCase()) && String.valueOf(l2).equals(letra3.getText()) && String.valueOf(l3).equals(letra5.getText())){
                nNivel += 1;
                Continuar.setEnabled(true);
                }
                break;
            case "Cortana":
                l1 = Palabras.separarPalabra(palabra, 0);
                l2 = Palabras.separarPalabra(palabra, 2);
                l3 = Palabras.separarPalabra(palabra, 4);
                l4 = Palabras.separarPalabra(palabra, 6);
                if(String.valueOf(l1).equals(letra1.getText().toUpperCase())){
                letra1.setBackground(Color.green);
                }else{
                letra1.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l2).equals(letra3.getText())){
                letra3.setBackground(Color.green);
                }else{
                letra3.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l3).equals(letra5.getText())){
                letra5.setBackground(Color.green);
                }else{
                letra5.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l4).equals(letra7.getText())){
                letra7.setBackground(Color.green);
                }else{
                letra7.setBackground(Color.red);
                errores += 1;
                Palabras.dibujarAhorcado(this.getGraphics(), errores);
                }
                if(String.valueOf(l1).equals(letra1.getText().toUpperCase()) && String.valueOf(l2).equals(letra3.getText()) && String.valueOf(l3).equals(letra5.getText()) && String.valueOf(l4).equals(letra7.getText())){
                switch(JOptionPane.showOptionDialog(this, "Felicitaciones has ganado", "Ahorcado", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[] {"Juego nuevo", "Salir del juego"}, "0")){
                case 0:
                    this.repaint();
                    nNivel = 1;
                    nVidas = 2;
                    errores = 0;
                    Comprobar.setEnabled(true);
                    nivel.setText(String.valueOf(nNivel));
                    vidas.setText(String.valueOf(nVidas));
                    errores2.setText(String.valueOf(errores));
                    letra1.setText("");
                    letra1.setBackground(Color.white);
                    letra3.setText("");
                    letra3.setBackground(Color.white);
                    letra2.setText("");
                    letra2.setBackground(Color.white);
                    letra4.setText("");
                    letra4.setBackground(Color.white);
                    letra5.setText("");
                    letra5.setBackground(Color.white);
                    letra6.setText("");
                    letra6.setBackground(Color.white);
                    letra7.setText("");
                    letra7.setBackground(Color.white);
                    switch(JOptionPane.showOptionDialog(this, "Selecciona el tipo de palabras a buscar", "Ahorcado", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[] {"Frutas", "Animales", "Personas"}, "0")){
                    case 0:
                        palabra = Palabras.frutas[0];
                        palabrasId = 0;
                        pista.setText("_ v _");
                        letra1.setEditable(true);
                        letra3.setEditable(true);
                        letra4.setVisible(false);
                        letra5.setVisible(false);
                        letra6.setVisible(false);
                        letra7.setVisible(false);
                        letra2.setText("v");
                        letra2.setEditable(false);
                        break;
                    case 1:
                        palabra = Palabras.animales[0];
                        palabrasId = 1;
                        pista.setText("_ s _");
                        letra1.setEditable(true);
                        letra3.setEditable(true);
                        letra4.setVisible(false);
                        letra5.setVisible(false);
                        letra6.setVisible(false);
                        letra7.setVisible(false);
                        letra2.setText("s");
                        letra2.setEditable(false);
                        break;
                    case 2:
                        palabra = Palabras.personas[0];
                        palabrasId = 2;
                        pista.setText("_ u _");
                        letra1.setEditable(true);
                        letra3.setEditable(true);
                        letra4.setVisible(false);
                        letra5.setVisible(false);
                        letra6.setVisible(false);
                        letra7.setVisible(false);
                        letra2.setText("u");
                        letra2.setEditable(false);
                        break;
                    }
                    break;
                case 1:
                    System.exit(0);
                    break;
                }
                }
                break;
        }
                break;
        }
        if(errores >= 7){
            nVidas -= 1;
            errores = 0;
            this.repaint();
        }
        vidas.setText(String.valueOf(nVidas));
        if(nVidas == 0){
            switch(JOptionPane.showOptionDialog(this, "Has perdido", "Ahorcado", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[] {"Juego nuevo", "Salir del juego"}, "0")){
                case 0:
                    this.repaint();
                    nNivel = 1;
                    nVidas = 2;
                    errores = 0;
                    Comprobar.setEnabled(true);
                    nivel.setText(String.valueOf(nNivel));
                    vidas.setText(String.valueOf(nVidas));
                    errores2.setText(String.valueOf(errores));
                    letra1.setText("");
                    letra1.setBackground(Color.white);
                    letra3.setText("");
                    letra3.setBackground(Color.white);
                    letra2.setText("");
                    letra2.setBackground(Color.white);
                    letra4.setText("");
                    letra4.setBackground(Color.white);
                    letra5.setText("");
                    letra5.setBackground(Color.white);
                    letra6.setText("");
                    letra6.setBackground(Color.white);
                    letra7.setText("");
                    letra7.setBackground(Color.white);
                    switch(JOptionPane.showOptionDialog(this, "Selecciona el tipo de palabras a buscar", "Ahorcado", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[] {"Frutas", "Animales", "Personas"}, "0")){
                        case 0:
                            palabra = Palabras.frutas[0];
                            palabrasId = 0;
                            pista.setText("_ v _");
                            letra1.setEditable(true);
                            letra3.setEditable(true);
                            letra4.setVisible(false);
                            letra5.setVisible(false);
                            letra6.setVisible(false);
                            letra7.setVisible(false);
                            letra2.setText("v");
                            letra2.setEditable(false);
                            break;
                        case 1:
                            palabra = Palabras.animales[0];
                            palabrasId = 1;
                            pista.setText("_ s _");
                            letra1.setEditable(true);
                            letra3.setEditable(true);
                            letra4.setVisible(false);
                            letra5.setVisible(false);
                            letra6.setVisible(false);
                            letra7.setVisible(false);
                            letra2.setText("s");
                            letra2.setEditable(false);
                            break;
                        case 2:
                            palabra = Palabras.personas[0];
                            palabrasId = 2;
                            pista.setText("_ u _");
                            letra1.setEditable(true);
                            letra3.setEditable(true);
                            letra4.setVisible(false);
                            letra5.setVisible(false);
                            letra6.setVisible(false);
                            letra7.setVisible(false);
                            letra2.setText("u");
                            letra2.setEditable(false);
                            break;
                       }
                    break;
                case 1:
                    System.exit(0);
                    break;
            }
        }
        errores2.setText(Integer.toString(errores));
    }//GEN-LAST:event_ComprobarMouseClicked

    private void ContinuarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ContinuarMouseClicked
        switch(palabrasId){
            case 0:
                palabra = Palabras.frutas[nNivel - 1];
                break;
            case 1:
                palabra = Palabras.animales[nNivel - 1];
                break;
            case 2:
                palabra = Palabras.personas[nNivel - 1];
                break;
        }
        nivel.setText(String.valueOf(nNivel));
        letra1.setText(null);
        letra1.setBackground(Color.white);
        letra3.setText(null);
        letra3.setBackground(Color.white);
        letra2.setText(null);
        letra2.setBackground(Color.white);
        letra4.setText(null);
        letra4.setBackground(Color.white);
        letra5.setText(null);
        letra5.setBackground(Color.white);
        letra6.setText(null);
        letra6.setBackground(Color.white);
        letra7.setText(null);
        letra7.setBackground(Color.white);
        switch(palabrasId){
            case 0:
            switch(palabra){
            case "uva":
                pista.setText("_ v _");
                letra2.setText("v");
                break;
            case "kiwi":
                pista.setText("_ i _ i");
                letra4.setVisible(true);
                letra2.setText("i");
                letra4.setText("i");
                break;
            case "fresa":
                pista.setText("f _ e _ a");
                letra1.setText("f");
                letra1.setEditable(false);
                letra2.setText(null);
                letra2.setEditable(true);
                letra3.setText("e");
                letra3.setEditable(false);
                letra4.setText(null);
                letra4.setEditable(true);
                letra5.setVisible(true);
                letra5.setText("a");
                break;
            case "sandia":
                pista.setText("_ a _ d _ a");
                letra1.setEditable(true);
                letra2.setText("a");
                letra2.setEditable(false);
                letra3.setEditable(true);
                letra3.setText(null);
                letra4.setText("d");
                letra4.setEditable(false);
                letra5.setEditable(true);
                letra5.setText(null);
                letra6.setVisible(true);
                letra6.setEditable(false);
                letra6.setText("a");
                break;
            case "naranja":
                pista.setText("_ a _ a _ j _");
                letra2.setText("a");
                letra4.setText("a");
                letra6.setText("j");
                letra7.setVisible(true);
                letra7.setEditable(true);
                break;
        }
        break;
            case 1:
                switch(palabra){
            case "oso":
                pista.setText("_ s _");
                letra2.setText("s");
                break;
            case "leon":
                pista.setText("_ e _ n");
                letra4.setVisible(true);
                letra2.setText("e");
                letra4.setText("n");
                break;
            case "tigre":
                pista.setText("t _ g _ e");
                letra1.setText("t");
                letra1.setEditable(false);
                letra2.setText(null);
                letra2.setEditable(true);
                letra3.setText("g");
                letra3.setEditable(false);
                letra4.setText(null);
                letra4.setEditable(true);
                letra5.setVisible(true);
                letra5.setText("e");
                break;
            case "gorila":
                pista.setText("_ o _ i _ a");
                letra1.setEditable(true);
                letra2.setText("o");
                letra2.setEditable(false);
                letra3.setEditable(true);
                letra3.setText(null);
                letra4.setText("i");
                letra4.setEditable(false);
                letra5.setEditable(true);
                letra5.setText(null);
                letra6.setVisible(true);
                letra6.setEditable(false);
                letra6.setText("a");
                break;
            case "tiburon":
                pista.setText("_ i _ u _ o _");
                letra2.setText("i");
                letra4.setText("u");
                letra6.setText("o");
                letra7.setVisible(true);
                letra7.setEditable(true);
                break;
                }
                break;
            case 2:
                switch(palabra){
                case "Jun":
                    pista.setText("_ u _");
                    letra2.setText("u");
                    break;
                case "John":
                    pista.setText("_ o _ n");
                    letra4.setVisible(true);
                    letra2.setText("o");
                    letra4.setText("n");
                    break;
                case "Emile":
                    pista.setText("E _ i _ e");
                    letra1.setText("E");
                    letra1.setEditable(false);
                    letra2.setText(null);
                    letra2.setEditable(true);
                    letra3.setText("i");
                    letra3.setEditable(false);
                    letra4.setText(null);
                    letra4.setEditable(true);
                    letra5.setVisible(true);
                    letra5.setText("e");
                    break;
                case "Carter":
                    pista.setText("_ a _ t _ r");
                    letra1.setEditable(true);
                    letra2.setText("a");
                    letra2.setEditable(false);
                    letra3.setEditable(true);
                    letra3.setText(null);
                    letra4.setText("t");
                    letra4.setEditable(false);
                    letra5.setEditable(true);
                    letra5.setText(null);
                    letra6.setVisible(true);
                    letra6.setEditable(false);
                    letra6.setText("r");
                    break;
                case "Cortana":
                    pista.setText("_ o _ t _ n _");
                    letra2.setText("o");
                    letra4.setText("t");
                    letra6.setText("n");
                    letra7.setVisible(true);
                    letra7.setEditable(true);
                    break;
                }
                    break;
    }
                Continuar.setEnabled(false);
    }//GEN-LAST:event_ContinuarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Comprobar;
    private javax.swing.JButton Continuar;
    private javax.swing.JButton Nuevo;
    private javax.swing.JTextField errores2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField letra1;
    private javax.swing.JTextField letra2;
    private javax.swing.JTextField letra3;
    private javax.swing.JTextField letra4;
    private javax.swing.JTextField letra5;
    private javax.swing.JTextField letra6;
    private javax.swing.JTextField letra7;
    private javax.swing.JTextField nivel;
    private javax.swing.JTextField pista;
    private javax.swing.JTextField vidas;
    // End of variables declaration//GEN-END:variables
}